version: '2.1'
jobs:
  lint:
    docker:
      - image: cimg/node:16.13.1
        environment:
          NODE_PATH: "./src"
          REACT_APP_API_URL: https://learning-admin-staging.herokuapp.com
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - run:
          name: eslint
          command: yarn run lint

  stylelint:
    docker:
      - image: cimg/node:16.13.1
        environment:
          NODE_PATH: ./src
          REACT_APP_API_URL: https://learning-admin-staging.herokuapp.com
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - run:
          name: stylelint
          command: yarn run stylelint

  test:
    docker:
      - image: cimg/node:16.13.1-browsers
        environment:
          NODE_PATH: ./src
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-deps-{{ .Branch }}-{{ checksum "package.json" }}
            - v1-deps-{{ .Branch }}
            - v1-deps
      - run:
          name: Install Dependencies
          command: yarn install
      - save_cache:
          key: v1-deps-{{ .Branch }}-{{ checksum "package.json" }}
          # cache NPM modules and the folder with the Cypress binary
          paths:
            - ~/project/node_modules
            - ~/.cache
      - run:
          command: yarn run test --coverage --maxWorkers=4 --reporters=default --reporters=jest-junit
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./coverage/
      - run:
          name: Start server
          command: yarn run start
          background: true
          environment:
            PORT: 3000
      - run:
          name: Start web component server
          command: yarn run start:wc
          environment:
            REACT_APP_S3_BUCKET: https://editor-images-test.s3.eu-west-2.amazonaws.com
          background: true
      - run:
          name: Cypress integration tests
          command: yarn exec cypress run
      - store_test_results:
          path: ./coverage
      - store_artifacts:
          path: ./coverage
      - store_artifacts:
          path: ./cypress/videos
      # - store_artifacts:
      #     path: ./cypress/screenshots
      - run:
          name: Post test coverage to Github
          command: bash -ue .circleci/record_coverage
          when: always

orbs:
  node: circleci/node@5

workflows:
  test:
    jobs:
      - test:
          context: raspberrypigithubbot
#   code_quality:
#     jobs:
#       - stylelint:
#           filters:
#             branches:
#               ignore:
#                 - main
#       - lint:
#           filters:
#             branches:
#               ignore:
#                 - main
